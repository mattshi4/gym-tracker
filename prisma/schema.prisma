// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model User {
    id                  Int             @id @default(autoincrement())
    name                String      
    weight              Int
    height              Int
    workouts            Workout[]
    workoutTypes        WorkoutType[]
    exerciseTypes       ExerciseType[]  
}

model Workout {
    id                  Int             @id @default(autoincrement())
    startedAt           DateTime        @default(now())
    notes               String          @default("No notes taken.")
    workoutType         WorkoutType[]
    exerciseInstances   ExerciseInstance[]  
}

// Would look like: chest, back, legs etc. Tags we can append to each workout
model WorkoutType {
    id                  Int             @id @default(autoincrement())
    bodyGroup           String 
    workouts            Workout[]
    userId              Int
    user                User            @relation(fields: [userId], references: [id])
}

model ExerciseType {        
    id                  Int             @id @default(autoincrement())
    name                String          @unique
    exerciseInstances   ExerciseInstance[] 
    userId              Int
    user                User            @relation(fields: [userId], references: [id])
    workouts            Workout[]
}

model ExerciseInstance {
    id                  Int             @id @default(autoincrement())
    sets                Int        
    reps                Int        
    weight              Int        
    exerciseTypeId      Int
    exerciseType        ExerciseType    @relation(fields: [exerciseTypeId], references: [id])
    workoutId           Int
    workout             Workout         @relation(fields: [workoutId], references: [id])
}

